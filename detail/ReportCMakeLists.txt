cmake_minimum_required(VERSION ${CMAKE_VERSION})
project(CentralBuilderReport C CXX)

set(cmake_vars
  CMAKE_SYSTEM
  CMAKE_SYSTEM_PROCESSOR
  CMAKE_GENERATOR
  CMAKE_GENERATOR_PLATFORM
  CMAKE_GENERATOR_TOOLSET
  CMAKE_TOOLCHAIN_FILE
  CMAKE_EXTRA_GENERATOR
  CMAKE_SIZEOF_VOID_P
  CMAKE_STANDARD_LIBRARIES
  CMAKE_XCODE_PLATFORM_TOOLSET
  XCODE_VERSION
  MSVC_VERSION
)

set(cmake_lang_vars
  COMPILER_ID
  COMPILER
  COMPILER_EXTERNAL_TOOLCHAIN
  COMPILER_TARGET
  COMPILER_VERSION
  SIZEOF_DATA_PTR
)

if(CB_ENV_REPORT_FILE)
  if(NOT CMAKE_SYSTEM STREQUAL CMAKE_HOST_SYSTEM)
    file(APPEND "${CB_ENV_REPORT_FILE}" "HOST_SYSTEM: ${CMAKE_HOST_SYSTEM}\n")
  endif()
  if(NOT CMAKE_SYSTEM_PROCESSOR STREQUAL CMAKE_HOST_SYSTEM_PROCESSOR)
    file(APPEND "${CB_ENV_REPORT_FILE}" "HOST_SYSTEM_PROCESSOR: ${CMAKE_HOST_SYSTEM_PROCESSOR}\n")
  endif()

  foreach(cv IN LISTS cmake_vars)
    if(${cv})
      string(REGEX REPLACE "^CMAKE_" "" v "${cv}")
      file(APPEND "${CB_ENV_REPORT_FILE}" "${v}: ${${cv}}\n")
    endif()
  endforeach()
  foreach(v IN LISTS cmake_lang_vars)
    set(ccv CMAKE_C_${v})
    set(ccxxv CMAKE_CXX_${v})
    set(yc ${${ccv}})
    set(yxx ${${ccxxv}})
    set(s "")
    if(yc)
      if(yxx)
        if(yc STREQUAL yxx)
          set(s "C/CXX_${v}: ${yc}\n")
        else()
          set(s "C_${v}: ${yc}\nCXX_${v}: ${yxx}\n")
        endif()
      else()
        set(s "C_${v}: <${yc}>\n")
      endif()
    elseif(yxx)
      set(s "CXX_${v}: ${yxx}\n")
    endif()
    if(s)
      file(APPEND "${CB_ENV_REPORT_FILE}" "${s}")
    endif()
  endforeach()

  set(CB_ENV_REPORT_FILE "" CACHE INTERNAL "" FORCE)
endif()

if(CB_FIND_PACKAGE_REPORT_FILE)
  file(WRITE "${CB_FIND_PACKAGE_REPORT_FILE}" "")
  foreach(name ${PKG_NAMES})
    find_package(${name} QUIET CONFIG)
    string(TOUPPER "${name}" NAME)
    if(${name}_FOUND OR ${NAME}_FOUND)
      file(APPEND "${CB_FIND_PACKAGE_REPORT_FILE}" "${name}: FOUND config-module in ${${name}_DIR}\n")
    else()
      if(${name}_DIR)
        file(APPEND "${CB_FIND_PACKAGE_REPORT_FILE}" "${name}: NOT FOUND (config-module found in ${${name}_DIR})\n")
      else()
        file(APPEND "${CB_FIND_PACKAGE_REPORT_FILE}" "${name}: NOT FOUND (no config-module)\n")
      endif()
      find_package(${name} QUIET MODULE)
      if(${name}_FOUND OR ${NAME}_FOUND)
        file(APPEND "${CB_FIND_PACKAGE_REPORT_FILE}" "    - but can be found with find-module\n")
      endif()
    endif()
  endforeach()
  set(CB_FIND_PACKAGE_REPORT_FILE "" CACHE INTERNAL "" FORCE)
endif()
